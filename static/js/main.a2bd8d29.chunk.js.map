{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","title","year","summary","poster","genres","description_full","synopsis","rating","runtime","to","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","id","contenteditable","spellcheck","class","movie","medium_cover_image","React","Component","Navigation","Detail","location","history","undefined","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2bd8d29.chunk.js","sourcesContent":["import React from 'react';\nimport './About.css';\n\nfunction About(props){//라우팅 대상이 되는 컴포넌트에 넘겨주는 기본 props\n    console.log(props);\n    return (\n        <div className=\"about__container\">\n            <span>\n                \"About this page: I built it because I love movies.\"\n            </span>\n        </div>\n    );\n}\n\nexport default About;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Movie.css'\nimport {Link} from 'react-router-dom';\n\n//Movie 컴포넌트는 state가 필요하지 않으므로 클래스형 컴포넌트가 아닌 함수형 컴포넌트로 작성\nfunction Movie({title, year, summary, poster, genres, description_full, synopsis, rating, runtime}){\n  return (\n    <div className=\"movie\">\n      <Link\n        to={{\n          pathname: '/movie-detail',\n          state: {\n            year, \n            title, \n            summary, \n            poster, \n            genres, \n            description_full, \n            synopsis, \n            rating, \n            runtime\n          },\n        }}\n      >\n        <img src={poster} alt={title} title={title}/>\n        <div className=\"movie__data\">\n          <h3 className=\"movie__title>\">{title}</h3>\n          <h5 className=\"movie__year\">{year}</h5>\n          <ul className=\"movie__genres\">\n            {genres.map((genre, index) => {\n              return <li key={index} className=\"movie__genre\">{genre}</li>;\n            })}\n          </ul>\n          <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nMovie.propTypes = { //API에서 넘겨받아올 데이터들\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n  description_full: PropTypes.string.isRequired,\n  synopsis: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n  runtime: PropTypes.number.isRequired,\n};\n\nexport default Movie;","import React from 'react';\nimport axios from 'axios'; //영화 데이터를 로딩하기 위해 자바스크립트의 fetch()대신 axios 이용\nimport Movie from '../components/Movie';//Movie 컴포넌트를 임포트\nimport './Home.css';\n\nclass Home extends React.Component{\n  state = {\n    isLoading: true,\n    movies: [], // state. 아래의 movies와는 다른 변수이다!\n  };\n\n  getMovies = async () => { //자바스크립트에게 getMovies()함수는 시간이 필요하고\n    const {\n      data: {\n        data: {movies}, //axios.get()의 결과를 저장할 변수\n      },\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");//axios.get()의 실행을 기다려달라고 말해주는것\n    console.log(movies)\n    //this.setState({movies: movies})// 앞의 movies는 state, 뒤의 movies는 구조 분해 할당으로 얻은 영화 데이터가 있는 변수. \n    this.setState({movies, isLoading: false});//키와 대입할 변수의 값이 같으면 하나로 축약 가능.\n    //위와 같이 하여 state의 movies: []에 영화 데이터 저장.\n    //isLoading이 false에서 true가 되면 API에서 데이터 로딩 완료.\n  }\n\n  componentDidMount(){\n    this.getMovies();\n  }\n\n  render(){\n    const {isLoading, movies} = this.state;\n    return (\n      <section className=\"container\">\n      <div className=\"area\" >\n        \n      </div >\n        {isLoading ? (\n          <div className = \"loader\">\n            <span className=\"loader__text\">\n              <div id = \"cupcake\" className = \"box\">\n                <h1 contenteditable spellcheck=\"false\">Loading...</h1>\n              </div>\n            </span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {/* <span>Theator</span> */}\n            {/* <h1 contenteditable spellcheck=\"false\">theater open</h1> */}\n            <div class=\"container\">\n              <div class=\"sign\">\n                  <div class=\"neon-blue\" id=\"title\">Wel<span id=\"fade\">come</span> To</div>\n                  <div class=\"neon-blue\">  <span class=\"neon-purple\" id=\"trav\">Thea</span>  <span class=\"neon-purple\">ter</span></div>\n              </div>\n            </div>\n            {movies.map(movie => (\n              <Movie \n                key = {movie.id}\n                id = {movie.id}\n                year = {movie.year}\n                title = {movie.title}\n                summary = {movie.summary}\n                poster = {movie.medium_cover_image}\n                genres = {movie.genres}\n                description_full = {movie.description_full}\n                synopsis = {movie.synopsis}\n                rating = {movie.rating}\n                runtime = {movie.runtime}\n              /> //여기서 Movie 컴포넌트 출력\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default Home;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './Navigation.css'\n\nfunction Navigation(){\n    return(\n        <div className=\"nav\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/about\">About</Link>\n        </div>\n    );\n}\n\nexport default Navigation;","import React from 'react';\n\nclass Detail extends React.Component{\n    componentDidMount(){\n        const{location, history}=this.props;\n        if (location.state == undefined){   //location.state가 없는 경우(카드를 누르지 않고 주소창에서 디테일로 이동할경우)\n            history.push('/');  //Home으로 이동시킴\n\n        }\n    }\n\n    render(){\n        const {location}=this.props;\n        console.log(location)\n        if (location.state){\n            return (\n            <span>\n                <center>\n                <img className=\"poster\" src={location.state.poster}/>\n                </center>\n                <span>\n                    <h1>{location.state.title} ({location.state.year})</h1>\n                    Rating : {location.state.rating}/10\n                    <br></br>\n                    Runtime : {location.state.runtime}\n                    <h3>Genre</h3>\n                    {location.state.genres.map((genre, index) => {\n                        return <li key={index} className=\"movie__genre\">{genre}</li>;\n                    })}\n                    <h3>Description</h3>\n                    {location.state.summary}\n                    {location.state.description_full}\n                    <h3>Synopsis</h3>\n                    {location.state.synopsis}\n                </span>\n            </span>\n            );\n        }else{\n            return null;\n        }\n    }\n}\n\nexport default Detail;","import React from 'react';\nimport './App.css';\nimport {HashRouter, Route} from 'react-router-dom';\n//라우터는 사용자가 입력한 url을 통해 특정 컴포넌트를 불러준다.\nimport About from './routes/About';\nimport Home from './routes/Home';\nimport Navigation from './components/Navigation'\nimport Detail from './routes/Detail';\n\nfunction App(){\n  return (\n    <HashRouter>\n      <Navigation/>\n      <Route path=\"/\" exact={true} component={Home}/>\n      <Route path=\"/about\" component={About}/>\n      <Route path=\"/movie-detail\" component={Detail}/>\n    </HashRouter>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}